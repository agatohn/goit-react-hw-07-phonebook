{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","Redux/phonebook/phoneboock-selectors.js","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phoneboock-operations.js","Components/contactForm/ContactForm.js","Components/filter/Filter.js","Components/contactList/ContactList.js","Components/App.js","Redux/phonebook/phonebook-reducer.js","Redux/store.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","phonebook","items","getFilter","filter","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","dispatch","useDispatch","handleContactData","e","target","value","checkExistAndAdd","newContact","some","contact","toLocaleLowerCase","alert","a","post","data","addContact","onSubmit","preventDefault","className","styles","form","formLabel","formInput","type","pattern","title","required","onChange","formBtn","Filter","inputValue","filterLabel","filterInput","ContactList","filteredContacts","toLowerCase","includes","contactList","map","id","contactListItem","contactsName","contactsBtn","onClick","contactId","delete","App","useEffect","get","createReducer","_","payload","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebookReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c0adf74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__34npx\",\"contactListItem\":\"ContactList_contactListItem__2Orid\",\"contactsName\":\"ContactList_contactsName__2lAMk\",\"contactsBtn\":\"ContactList_contactsBtn__8PnAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2upMQ\",\"filterInput\":\"Filter_filterInput__1O9uY\"};","export const getContacts = (state) => state.phonebook.items;\r\nexport const getFilter = (state) => state.phonebook.filter;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"phonebook/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"phonebook/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"phonebook/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/contacts\", contact);\r\n\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../Redux/phonebook/phoneboock-selectors\";\r\nimport { addContact } from \"../../Redux/phonebook/phoneboock-operations\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleContactData = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkExistAndAdd = (newContact) => {\r\n    contacts.some(\r\n      (contact) =>\r\n        contact.name.toLocaleLowerCase() ===\r\n          newContact.name.toLocaleLowerCase() ||\r\n        contacts.some((contact) => contact.number === newContact.number)\r\n    )\r\n      ? alert(\r\n          `Friend ${newContact.name} or number ${newContact.number} is alredy exist`\r\n        )\r\n      : dispatch(addContact(newContact));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    checkExistAndAdd({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.formLabel}>\r\n        Name\r\n        <input\r\n          className={styles.formInput}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel}>\r\n        Number\r\n        <input\r\n          className={styles.formInput}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.formBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getFilter } from \"../../Redux/phonebook/phoneboock-selectors\";\r\n\r\nexport default function Filter() {\r\n  const inputValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../Redux/phonebook/phoneboock-operations\";\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from \"../../Redux/phonebook/phoneboock-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactListItem}>\r\n          <p className={styles.contactsName}>\r\n            {name}: {number}\r\n          </p>\r\n\r\n          <button\r\n            className={styles.contactsBtn}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchContacts } from \"../Redux/phonebook/phoneboock-operations\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   getContacts: () => dispatch(phonebookActions.getContacts()),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from \"./phonebook-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\n\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const persistedReducer = persistReducer(phonebookPersistConfig, rootReducer);\r\n// const phonebookPersistConfig = {\r\n//   key: \"phonebook\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    // phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__L11Lp\",\"formLabel\":\"ContactForm_formLabel__qItZp\",\"formInput\":\"ContactForm_formInput__25QhW\",\"formBtn\":\"ContactForm_formBtn__1fFKZ\"};"],"sourceRoot":""}